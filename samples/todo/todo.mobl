application todo

import mobl::ui::generic
import model

control taskItem(t : Task) {
  checkBox(t.done, label=t.name)
  contextMenu {
    button("Delete", onclick={
      remove(t);
    })
    button("Edit", onclick={
      editTask(t);
    })
  }
}

control taskDetail(t : Task) {
  group {
    item { label(t.name) }
    when(t.description) {
      item { label(t.description) }
    }
    item {
      label(t.done ? "This task has been performed"
                   : "This task has not been performed")
    }
  }
  button("Edit", onclick={ editTask(t); })
}

screen addTask() {
  var newTask = Task()

  header("Add") {
    backButton("Back", onclick= { screen return; })
    button("Add", onclick={
      add(newTask);
      screen return;
    })
  }
  group {
    item { textField(newTask.name, placeholder="Task name") }
  }
}

screen editTask(t : Task) {
  header("Edit") {
    button("Done", onclick={ screen return; })
  }
  group {
    item { textField(t.name,
                     placeholder="Task name") }
    item { textField(t.description,
                     placeholder="Task description") }
  }
}

control search() {
  header("Search")
  searchList(Task, taskItem, taskDetail, resultLimit=10)
}

control tasks() {
  header("Tasks") {
    button("Add", onclick={ addTask(); })
  }
  masterDetail(Task.all() order by date desc, taskItem, taskDetail)
}

screen promptScreen(q : String) : String {
  var answer = ""
  header(q) {
    button("OK", onclick={
      screen return answer;
    })
  }
  group {
    item { textField(answer) }
  }
}

screen root() {
  tabSet([("Tasks", "", tasks), ("Search", "", search)])
}